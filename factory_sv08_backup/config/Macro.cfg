
[gcode_shell_command FACTORY_RESETS]
command: /home/sovol/factory_resets.sh
timeout: 2.

[force_move]
enable_force_move: True

[gcode_macro _global_var]
variable_pause_park:{'x': -2, 'y': -0.5, 'z': 10, 'e': 1}
variable_cancel_park:{'x': -2, 'y': 501, 'z': 10, 'e': 1}
variable_z_maximum_lifting_distance: 502
variable_pause_resume_travel_speed: 150
variable_load_filament_extruder_temp: 250
variable_bed_mesh_calibrate_target_temp: 65
variable_has_z_offset_calibrated: False
variable_filament_sensor_print: False
variable_is_push_buffer: True
gcode:

[gcode_macro CHECK_FILAMENT_SENSOR]
gcode:
  RESPOND PREFIX="INFO" MSG="filament_sensor_print = {printer['gcode_macro _global_var'].filament_sensor_print}"

[gcode_macro mainled_on]
gcode:
    SET_PIN PIN=main_led VALUE=1

[gcode_macro mainled_off]
gcode:
    SET_PIN PIN=main_led VALUE=0
    
[gcode_macro _IDLE_TIMEOUT]
gcode:
    {% if printer.print_stats.state == "paused" %}
      RESPOND TYPE=echo MSG="No operations in 30min!"
    {% else %}
     M84
     TURN_OFF_HEATERS
    {% endif %}

[gcode_macro _ALL_FAN_OFF]
gcode:
    M106 S0
    M107

[gcode_macro MOVE_TO_CENTER]
gcode:
    {% set x_offset = -19.8 %}
    {% set y_offset = -0.75 %}

    G28
    G91
    G1 X{x_offset} Y{y_offset}
    G90

[gcode_macro CLEAN_NOZZLE] 
gcode:
    BED_MESH_CLEAR
    {% if printer.toolhead.homed_axes != "xyz" %}
       G28
    {% endif %}
    M109 S200
    G90 
    G1 X30 Y195 F9000
    RUN_PROBE_VIR_CONTACT
    G91
    G1 Z3
    G90
    G1 X-7 F2400
    G91
    G1 Z-2.7
    G90
    G1 X-9 Y236
    G1 X-7 Y190 
    G1 X-9 Y225
    G1 X-7 Y205 
    G1 X-9 Y225
    G1 X-7 Y205
    G1 X-9 Y218
    G1 X-7 Y208
    G1 X-9 Y218
    G1 X-7 Y208
    G1 X-9 Y213
    G91
    G1 Z5
    G90
    G1 Y260 F9000
    G91 
    G1 Z-6.0
    G90
    G1 Y283 F2400
    G1 Y260
    G1 Y283
    M106 S255
    M109 S130
    M106 S0
    G1 Z10

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing:QUAD_GANTRY_LEVEL_BASE
gcode:
    {% if printer.toolhead.homed_axes|lower != "xyz" %}
        G28
    {% endif %}
    QUAD_GANTRY_LEVEL_BASE

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
    {% set origin_square_corner_velocity_val = printer.toolhead.square_corner_velocity|float %}
    {% set temporarily_square_corner_velocity_val = 1.0 %}
    {% if not printer['gcode_macro _global_var'].has_z_offset_calibrated %}
        G28 X
        G28 Y
        Z_OFFSET_CALIBRATION METHOD=force_overlay BED_TEMP={printer.heater_bed.target}
    {% endif %}
    
    {% if printer.quad_gantry_level.applied|lower != 'true' %}
        QUAD_GANTRY_LEVEL
    {% endif %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={temporarily_square_corner_velocity_val}
    BED_MESH_CALIBRATE_BASE ADAPTIVE=1 PGP=0 METHOD=rapid_scan
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={origin_square_corner_velocity_val}

[gcode_macro START_PRINT]
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(200)|float %}
    {% set BED = params.BED|default(60)|float %}
    CLEAR_PAUSE
    CLEAN_NOZZLE
    SET_GCODE_OFFSET Z=0
    SET_VELOCITY_LIMIT ACCEL=40000 ACCEL_TO_DECEL=10000
    Z_OFFSET_CALIBRATION METHOD=force_overlay BED_TEMP={BED}
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=has_z_offset_calibrated VALUE=True
    M400
    QUAD_GANTRY_LEVEL
    G28 Z
    BED_MESH_CALIBRATE
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=has_z_offset_calibrated VALUE=False
    M109 S{EXTRUDER}
    MANUAL_FEED
    SET_PIN PIN=red_led VALUE=0
    SET_PIN PIN=blue_led VALUE=0
    M400
    NOZZLE_CLOG_CHECK
    ; Purge line to ensure nozzle is clean and primed
    G90
    G1 Z2.0 F3000
    G1 X10 Y10 F5000
    G1 Z0.3 F3000
    G92 E0
    G1 X10 Y200 E15 F1500
    G1 X12 Y200 F5000
    G92 E0
    G1 X12 Y10 E15 F1200
    G92 E0
    G1 Z2.0 F3000

[gcode_macro END_PRINT]
description: End print sequence - retract, cool, home XY, move to safe position
variable_state: 'normal'
gcode:
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}
    
    {% if printer.toolhead.homed_axes|lower == "xyz" %}
        G91  # Relative positioning
        
        # Retract filament BEFORE turning off heaters (while still hot)
        {% if printer['filament_switch_sensor filament_sensor'].enable == True and printer['filament_switch_sensor filament_sensor'].filament_detected == True %}
            {% if printer.extruder.temperature >= e_mintemp %}
                G1 E-2 F2700  # Quick retract
                G1 E-2 Z0.2 F2400  # Additional retract with small Z lift
            {% endif %}
        {% endif %}
        
        # NOW turn off heaters after retraction
        TURN_OFF_HEATERS
        _ALL_FAN_OFF
        
        # Lift Z 30mm above print
        G1 Z30 F3000
        
        G90  # Absolute positioning
        
        # Home X and Y axes
        G28 X Y
        
        # Move to back right corner (safest position - away from user)
        G1 X500 Y500 F9000
        
    {% else %}
        # If not homed, just turn off heaters
        TURN_OFF_HEATERS
        _ALL_FAN_OFF
    {% endif %}
    
    # Display status
    M117 Print Complete!
    
    # Reset speed and flow
    M220 S100
    M221 S100
    
    # Clear pause state
    CLEAR_PAUSE
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=filament_sensor_print VALUE=False
    CHECK_FILAMENT_STATUS
    
    # Disable motors
    M84 X Y Z E
    
    {action_respond_info("Print finished! Hotend and bed cooling down.")}
[gcode_macro CANCEL_PRINT]
description: 
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set x_park = printer['gcode_macro _global_var'].cancel_park.x|float %}
    {% set y_park = printer['gcode_macro _global_var'].cancel_park.y|float %}
    {% set z_park = printer['gcode_macro _global_var'].cancel_park.z|float %}
    {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}
    {% set e_restract = printer['gcode_macro _global_var'].cancel_park.e|float %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}
    CANCEL_PRINT_BASE
    {% if printer.toolhead.homed_axes|lower == "xyz" %}
        G91
        {% if printer['filament_switch_sensor filament_sensor'].enabled == True and printer['filament_switch_sensor filament_sensor'].filament_detected == True %}
            {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target) and printer.extruder.temperature >= e_mintemp %}
                G1 E-{e_restract} F500
            {% else %}
                {action_respond_info("Nozzle not hot enough")}
            {% endif %}
        {% endif %}
        {%if (printer.gcode_move.position.z + 10) < z_lift_max %}
            G1 Z+10 F3000
        {% else %}
            G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
        {% endif %}
        G90
        G1 X{x_park} Y{y_park} F9000
    {% endif %}
    TURN_OFF_HEATERS
    _ALL_FAN_OFF
    CLEAR_PAUSE
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=filament_sensor_print VALUE=False
    CHECK_FILAMENT_STATUS
    M220 S100
    M221 S100
    M84
    {action_respond_info("Cancel Print Success!")}

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
variable_state: 'normal'
variable_is_pausing: False
gcode:
    {% if printer['gcode_macro PAUSE'].is_pausing %}
        {action_respond_info("Pause already in progress, skipping")}
    {% else %}
        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=is_pausing VALUE=True
        {% if printer.pause_resume.is_paused == False %}
            {% set x_park = printer['gcode_macro _global_var'].pause_park.x|float %}
            {% set y_park = printer['gcode_macro _global_var'].pause_park.y|float %}
            {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
            {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}
            {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}
            PAUSE_BASE
            {action_respond_info("Pause Print!")}
            G91
            {% if printer.toolhead.homed_axes|lower == "xyz" %}
                {% if (printer.gcode_move.position.z + 5) < z_lift_max %}
                    G1 Z+5 F3000
                {% else %}
                    G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
                {% endif %}
                G90
                {% if printer.gcode_move.position.x != x_park and
                        printer.gcode_move.position.y != y_park     
                %}
                    G1 X{x_park} Y{y_park} F{printer["gcode_macro _global_var"].pause_resume_travel_speed * 60}
                {% endif %}
            {% endif %}
            M104 S{printer.extruder.target}
        
            {% if state == 'normal' %}
                {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                    {% if printer['filament_switch_sensor filament_sensor'].enabled == True and 
                        printer['filament_switch_sensor filament_sensor'].filament_detected == True
                    %}
                        G91
                        G1 E-{e_restract} F300
                        G90
                    {% elif printer['filament_switch_sensor filament_sensor'].enabled == True and 
                            printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
                        UNLOAD_FILAMENT
                    {% endif %}
                {% endif %}
            {% elif state == 'filament_change' %}
                {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                   {% if printer['filament_switch_sensor filament_sensor'].filament_detected == True %}
                       BUFFER_LONG_UNLOAD_FILAMENT
                   {% else %}
                       UNLOAD_FILAMENT
                   {% endif %}
                   M400
                {% endif %}
            {% endif %}
        {% endif %}
        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=is_pausing VALUE=False
    {% endif %}

[delayed_gcode _resume_wait]
gcode:
    {% if printer['gcode_macro RESUME'].execute|lower != 'false' %}
        RESUME
    {% endif %}

[gcode_macro RESUME]
description: Pause the actual running print
rename_existing: RESUME_BASE
variable_state: 'normal'
gcode:
    {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
    {% set extruder_target_temp = printer.extruder.target|int %}
    {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}
    MANUAL_FEED
    {% if printer['filament_switch_sensor filament_sensor'].enable != True and printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
        {action_respond_info("Please Insert filament in Sensor!")}
    {% else %}
        {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
            {action_respond_info("Print resumming!")}
            G91
            G1 E{e_restract+2} F900
            G90
        {% endif %}
        RESUME_BASE VELOCITY=400
    {% endif %}
    SET_PIN PIN=green_led VALUE=1
    SET_PIN PIN=red_led VALUE=0
    SET_PIN PIN=blue_led VALUE=0
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=plug_status VALUE=False
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=winding_status VALUE=False
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=filament_sensor_print VALUE=False
    M400
    NOZZLE_CLOG_CHECK

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}
    MANUAL_FEED
    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" or current_target_temp == 0 %}
            M104 S{extruder_temp}
            {action_respond_info("Nozzle not hot enough!")}
            {action_respond_info("Nozzle heating...")}
            M109 S{extruder_temp}
        {% else %}
            {% if current_target_temp >= printer.configfile.settings['extruder'].min_extrude_temp %}
                M109 S{current_target_temp}
            {% else %}
                M109 S{extruder_temp}
            {% endif %}
        {% endif %}
        G91 
        G1 E45 F300
        G1 E30 F150
        G90
        M400
    {% else %}
        {action_respond_info("Don't load filament during printing!!!")}
    {% endif %}

[gcode_macro _CONTINUE_LOAD_FILAMENT]
gcode:
    {% if printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp %}
        G91
        G1 E30.0 F300
        M400
        G90
    {% else %}
        {action_respond_info("Nozzle not hot enough!")}
    {% endif %}
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}
    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" or current_target_temp == 0 %}
            M104 S{extruder_temp}
            {action_respond_info("Nozzle not hot enough!")}
            {action_respond_info("Nozzle heating...")}
            M109 S{extruder_temp}
        {% else %}
            {% if current_target_temp >= printer.configfile.settings['extruder'].min_extrude_temp %}
                M109 S{current_target_temp}
            {% else %}
                M109 S{extruder_temp}
            {% endif %}
        {% endif %}
        G91
        G1 E+30 F300
        M400
        SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
        G1 E-10 F1500
        BUFFER_STEPPER STEPPER=filament_buffer MOVE=-10 SPEED=25
        G1 E-35 F600
        BUFFER_STEPPER STEPPER=filament_buffer MOVE=-35 SPEED=10
        G1 E5 F600
        BUFFER_STEPPER STEPPER=filament_buffer MOVE=5 SPEED=10
        G1 E-5 F600
        BUFFER_STEPPER STEPPER=filament_buffer MOVE=-5 SPEED=10
        M109 S160
        G1 E10 F300
        BUFFER_STEPPER STEPPER=filament_buffer MOVE=10 SPEED=5
        G1 E-10 F300
        BUFFER_STEPPER STEPPER=filament_buffer MOVE=-10 SPEED=5
        G4 P3000
        M400
        G1 E-50 F300 
        BUFFER_STEPPER STEPPER=filament_buffer MOVE=-100 SPEED=5
        G4 P4000
        M400
        G90
        {% if current_target_temp == 0 or printer.print_stats.state != "paused" %}
            M104 S0
        {% endif %}
        M109 S{current_target_temp}
        SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True
    {% else %}
        {action_respond_info("Don't unload filament during printing!!!")}
    {% endif %}

[gcode_macro M109]
rename_existing: M99109
gcode:    
    {% set s = params.S|float %}    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-1} MAXIMUM={s+2}   
    {% endif %}
    
[gcode_macro M190]

rename_existing: M99190
gcode:    
    {% set s = params.S|float %}
    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-1} MAXIMUM={s+2}  
    {% endif %}

[gcode_macro M106]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    {% if fan == 'fan0' or fan == 'fan1'%}
        SET_FAN_SPEED FAN={'fan0'} SPEED={speed}
        SET_FAN_SPEED FAN={'fan1'} SPEED={speed}
    {% else %}
        SET_FAN_SPEED FAN={fan} SPEED={speed}
    {% endif %}
    
[gcode_macro M107]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% if fan == 'fan0' or fan == 'fan1'%}
        SET_FAN_SPEED FAN={'fan0'} SPEED=0 
        SET_FAN_SPEED FAN={'fan1'} SPEED=0
    {% else %}
        SET_FAN_SPEED FAN={fan} SPEED=0
    {% endif %}

[gcode_macro CONTINUE_PRINT_D]
variable_end_d: 0 
gcode:
    {% set d_start = printer.print_stats.filament_used|float %}
    {% set d_end = (d_start + params.D|float)|float %} 
        SET_GCODE_VARIABLE MACRO=CONTINUE_PRINT_D VARIABLE=end_d VALUE={d_end} 
        UPDATE_DELAYED_GCODE ID=VERIFY_PRINT_D DURATION=1 

[delayed_gcode VERIFY_PRINT_D]
initial_duration: 0 
gcode:
    {% if printer.print_stats.state == "printing" and printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
        {% set d_current = printer.print_stats.filament_used|float %} 
        {% if d_current < printer["gcode_macro CONTINUE_PRINT_D"].end_d %} 
            UPDATE_DELAYED_GCODE ID=VERIFY_PRINT_D DURATION=1 
        {% else %}
            M600
            UPDATE_DELAYED_GCODE ID=VERIFY_PRINT_D DURATION=0 
            SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=filament_sensor_print VALUE=True
            CHECK_FILAMENT_SENSOR
        {% endif %}
    {% else %}
        UPDATE_DELAYED_GCODE ID=VERIFY_PRINT_D DURATION=0
    {% endif %}
    
[gcode_macro M600]
gcode:
    PAUSE STATE=filament_change
    {action_respond_info("filament change")}

[gcode_macro G28]
rename_existing: M9928
gcode:
    {% if printer.probe.is_calibrated %}
        M9928 {rawparams}  
    {% else %}
        {% if params.X is defined or params.Y is defined %}
            M9928 {rawparams} 
        {% else %}
            M9928 X           
            M9928 Y
            Z_OFFSET_CALIBRATION METHOD=force_overlay EXTRUDER_TEMP=0 BED_TEMP=0
            M400
            SAVE_CONFIG
        {% endif %}
    {% endif %}
    
[gcode_macro plr_temperature_wait]
gcode:
    {% set extruder_target_temp = printer.extruder.target|int %}
    {% set bed_targer_temp = printer.heater_bed.target|int %}
    
    M190 S{bed_targer_temp}
    M109 S{extruder_target_temp}


[gcode_macro PRINT_START]
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(200)|float %}
    {% set BED = params.BED|default(60)|float %}
    START_PRINT EXTRUDER={EXTRUDER} BED={BED}
